---
name: Pihole
run-name: Commit message "${{ github.event.head_commit.message }}" on branch "${{ github.ref_name }}" by @${{ github.actor }}

on:
  schedule:
    - cron: '0 */3 * * *'
  push:
    branches:
      - master
      - main
      - devops/*
    paths-ignore:
      - '**/README.md'
  workflow_dispatch:

env:
  terraform_path: ./pihole
  test: true
  TF_VAR_user_ocid: ${{ secrets.OCI_CLI_USER }}
  TF_VAR_fingerprint: ${{ secrets.OCI_CLI_FINGERPRINT }}
  TF_VAR_region: ${{ secrets.OCI_CLI_REGION }}
  TF_VAR_tenancy_ocid: ${{ secrets.OCI_CLI_TENANCY }}
  TF_VAR_private_key_path: "/home/runner/.ssh/key.pem"
  TF_HTTP_ADDRESS: ${{ secrets.TF_HTTP_ADDRESS }}     # Pre Authentication string to Oracle bucket for state file

jobs:
  Validation:
    runs-on: ubuntu-latest
    if: ${{ vars.test != 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.terraform_path }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Terraform Installation
        uses: hashicorp/setup-terraform@v2
      - name: Terraform Validate
        run: |
          terraform init -backend=false
          terraform validate
      - name: Tfsec scan
        uses: triat/terraform-security-scan@v3.0.3
      - name: Test with Checkov
        id: Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          soft_fail: true
          output_format: sarif
          framework: terraform
      - name: Cloud-init validation
        uses: anderssonpeter/cloud-init-linter@v1
  Plan:
    needs: Validation
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.terraform_path }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Terraform Installation
        uses: hashicorp/setup-terraform@v2
      - uses: DamianReeves/write-file-action@master
        name: Script for key
        with:
          path: /tmp/script.sh
          contents: |
            #!/bin/bash
            echo "${{ secrets.OCI_CLI_KEY_CONTENT }}";
      - name: Create PEM file
        shell: bash
        run: |
          chmod +x /tmp/script.sh && mkdir /home/runner/.ssh
          touch $TF_VAR_private_key_path
          /tmp/script.sh > $TF_VAR_private_key_path
      - name: Terraform init
        run: |
          terraform init
      - name: Terraform plan
        run: |
          terraform plan
#      - name: Run tmate                              # Allows ssh to machine
#        uses: mxschmitt/action-tmate@v2
  Apply:
    runs-on: ubuntu-latest
    needs: Plan
    if: contains(fromJSON('["main", "master"]'), github.ref_name)
    environment: Pihole
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.terraform_path }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Terraform Installation
        uses: hashicorp/setup-terraform@v2
      - uses: DamianReeves/write-file-action@master
        name: Script for key
        with:
          path: /tmp/script.sh
          contents: |
            #!/bin/bash
            echo "${{ secrets.OCI_CLI_KEY_CONTENT }}";
      - name: Create PEM file
        shell: bash
        run: |
          chmod +x /tmp/script.sh && mkdir /home/runner/.ssh
          touch $TF_VAR_private_key_path
          /tmp/script.sh > $TF_VAR_private_key_path
      - name: Terraform init
        run: |
          terraform init
      - name: Terraform plan
        run: |
          terraform plan
      - name: Terraform apply
        run: |
          terraform apply -auto-approve
