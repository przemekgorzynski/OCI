---
name: Pihole
run-name: Commit message "${{ github.event.head_commit.message }}" on branch "${{ github.ref_name }}" by @${{ github.actor }}

on:
  push:
    branches:
      - master
      - main
      - devops/*
    paths-ignore:
      - '**/README.md'
  workflow_dispatch:

env:
  terraform_path: ./pihole
  test: true
  TF_VAR_user_ocid: ${{ secrets.OCI_CLI_USER }}
  TF_VAR_fingerprint: ${{ secrets.OCI_CLI_FINGERPRINT }}
  TF_VAR_region: ${{ secrets.OCI_CLI_REGION }}
  TF_VAR_tenancy_ocid: ${{ secrets.OCI_CLI_TENANCY }}
  TF_VAR_private_key_path: "/home/runner/.ssh/key.pem"
  TF_HTTP_ADDRESS: ${{ secrets.TF_HTTP_ADDRESS }}     # Pre Authentication string to Oracle bucket for state file
  DYNU_API_KEY: ${{ secrets.DYNU_API_KEY }}

jobs:
  Code_Validation:
    runs-on: ubuntu-latest
    if: ${{ vars.test != 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.terraform_path }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Terraform Installation
        uses: hashicorp/setup-terraform@v2
      - name: Terraform Validate
        run: |
          terraform init -backend=false
          terraform validate
      - name: Checkov Test
        id: Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          soft_fail: false
          output_format: sarif
          framework: terraform
      - name: Cloud-init validation
        run: |
          sudo apt-get install cloud-init -y
          cloud-init schema --config-file cloud-init.yml
  Terraform_Plan:
    needs: Code_Validation
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.terraform_path }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Terraform Installation
        uses: hashicorp/setup-terraform@v2
      - uses: DamianReeves/write-file-action@master
        name: Script for key
        with:
          path: /tmp/script.sh
          contents: |
            #!/bin/bash
            echo "${{ secrets.OCI_CLI_KEY_CONTENT }}";
      - name: Create PEM file
        shell: bash
        run: |
          chmod +x /tmp/script.sh && mkdir /home/runner/.ssh
          touch $TF_VAR_private_key_path
          /tmp/script.sh > $TF_VAR_private_key_path
      - name: Terraform init
        run: |
          terraform init
      - name: Terraform plan
        run: |
          terraform plan
  Terraform_Apply:
    runs-on: ubuntu-latest
    needs: Terraform_Plan
    if: contains(fromJSON('["main", "master"]'), github.ref_name)
    environment: Pihole
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.terraform_path }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Terraform Installation
        uses: hashicorp/setup-terraform@v2
      - uses: DamianReeves/write-file-action@master
        name: Script for key
        with:
          path: /tmp/script.sh
          contents: |
            #!/bin/bash
            echo "${{ secrets.OCI_CLI_KEY_CONTENT }}";
      - name: Create PEM file
        shell: bash
        run: |
          chmod +x /tmp/script.sh && mkdir /home/runner/.ssh
          touch $TF_VAR_private_key_path
          /tmp/script.sh > $TF_VAR_private_key_path
      - name: Terraform init
        run: |
          terraform init
      - name: Terraform plan
        run: |
          terraform plan
      - name: Terraform apply
        run: |
          terraform apply -auto-approve
      - name: Upload Ansible Artifact 
        uses: actions/upload-artifact@v3
        with:
          name: ansible-artifact
          path: | 
            ./pihole/ansible/inventory.yml
            ./pihole/ansible/block_data.yml
  Pihole_Ansible:
    runs-on: ubuntu-latest
    needs: Terraform_Apply
    environment: Pihole
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download Ansible Inventory Artifact
        uses: actions/download-artifact@v3
        with:
          name: ansible-artifact
          path: ./pihole/ansible
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Run tmate                              # Allows ssh to machine
        uses: mxschmitt/action-tmate@v2
      - name: Install Ansible
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          sudo apt install software-properties-common
          sudo add-apt-repository --yes --update ppa:ansible/ansible
          sudo apt install ansible
          export ANSIBLE_HOST_KEY_CHECKING=False
          ansible pihole -i ./pihole/ansible/inventory.yml -m ping
