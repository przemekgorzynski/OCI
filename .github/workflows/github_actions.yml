name: OCI
run-name: Commit message "${{ github.event.head_commit.message }}" by @${{ github.actor }}

on:
    push:
        branches: [ "master" ]
    workflow_dispatch:                                              # Allows you to run this workflow manually from the Actions tab

env:
    TF_HTTP_ADDRESS: ${{ secrets.TF_HTTP_ADDRESS }}                                # Pre Authentication string to Oracle bucket for state file
    terraform_path: ./terraform
    test: false


jobs:
    Validation:
      runs-on: ubuntu-latest
      if: ${{ vars.test == 'true' }}
      defaults:
        run:
          shell: bash
          working-directory: ${{ env.terraform_path }}
      steps:
        - name: Checkout 
          uses: actions/checkout@v3
        - name: Terraform Installation
          uses: hashicorp/setup-terraform@v2
        - name: Terraform Validate
          run: |
            terraform init -backend=false
            terraform validate
        - name: Tfsec scan
          uses: triat/terraform-security-scan@v3.0.3
        - name: Checkov scan
          run: |
            pip3 install checkov
            checkov -d . --framework terraform --download-external-modules true
    Plan:
      #needs: Validation
      runs-on: ubuntu-latest
      defaults:
        run:
          shell: bash
          working-directory: ${{ env.terraform_path }}
      steps:
        - name: Checkout 
          uses: actions/checkout@v3
        - name: Terraform Installation
          uses: hashicorp/setup-terraform@v2
        - name: Decode secret
          uses: davidSchuppa/base64Secret-toFile-action@v1
          with:
              secret: ${{ secrets.OCI_CLI_KEY_CONTENT }}
              filename: myFile.txt
              destination-path: ~/dirForMyFile
        - shell: bash
          env:
            user_tmp: ${{ secrets.OCI_CLI_USER }}
            fingerprint_tmp: ${{ secrets.OCI_CLI_FINGERPRINT }}
            tenancy_tmp: ${{ secrets.OCI_CLI_TENANCY }}
            region_tmp: ${{ secrets.OCI_CLI_REGION }}
          run: |
            cat ~/dirForMyFile
            mkdir ~/.oci
            echo $key_content_tmp | base64  > ~/.oci/key.pem
            user_tmp=`echo $user_tmp | base64 --decode`
            fingerprint_tmp=`echo $fingerprint_tmp | base64 --decode`
            tenancy_tmp=`echo $tenancy_tmp | base64 --decode`
            region_tmp=`echo $region_tmp | base64 --decode`
            cat > ~/.oci/config << EOF
            [DEFAULT]
            user=$user_tmp
            fingerprint=$fingerprint_tmp
            tenancy=$tenancy_tmp
            region=$region_tmp
            key_file=~/.oci/key.pem
            EOF
        - name: OCI file
          run: |
            ls -la ~/.oci
            cat ~/.oci/config
            cat ~/.oci/key.pem
#        - name: Terraform init
#          run: |
#              terraform init
#        - name: Terraform plan
#          run: |
#            terraform plan
